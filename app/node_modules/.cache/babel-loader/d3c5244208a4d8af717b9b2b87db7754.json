{"ast":null,"code":"import _classCallCheck from \"/Users/nojan/Desktop/Statify/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nojan/Desktop/Statify/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nojan/Desktop/Statify/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nojan/Desktop/Statify/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nojan/Desktop/Statify/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nojan/Desktop/Statify/Client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport login from \"./login.svg\";\nimport spotify from './spotify.png';\nimport twitter from './twitter.png';\nimport github from './github.png';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport SpotifyWebApi from 'spotify-web-api-js';\nvar spotifyApi = new SpotifyWebApi();\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    var params = _this.getHashParams();\n\n    var token = params.access_token;\n\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n\n    _this.state = {\n      loggedIn: token ? true : false,\n      nowPlaying: {\n        name: 'Not Checked',\n        albumArt: 'http://www.scottishculture.org/themes/scottishculture/images/music_placeholder.png?'\n      },\n      artistDetails: {\n        artists: {\n          items: []\n        }\n      },\n      trackDetails: {\n        tracks: {\n          items: []\n        }\n      },\n      auth: token,\n      portemail: 'http://localhost:81'\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"getHashParams\",\n    value: function getHashParams() {\n      var hashParams = {};\n      var e,\n          r = /([^&;=]+)=?([^&;]*)/g,\n          q = window.location.hash.substring(1);\n      e = r.exec(q);\n\n      while (e) {\n        hashParams[e[1]] = decodeURIComponent(e[2]);\n        e = r.exec(q);\n      }\n\n      return hashParams;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.state.loggedIn) {\n        window.location.href = 'https://accounts.spotify.com/authorize?client_id=22e020a622e44cdcbfa58f0cdbb04fe9&scope=playlist-read-private%20playlist-read-collaborative%20playlist-modify-public%20user-read-recently-played%20playlist-modify-private%20ugc-image-upload%20user-follow-modify%20user-follow-read%20user-library-read%20user-library-modify%20user-read-private%20user-read-email%20user-top-read%20user-read-playback-state&response_type=token&redirect_uri=http://localhost:3000/callback';\n      }\n    }\n  }, {\n    key: \"getNowPlaying\",\n    value: function getNowPlaying() {\n      var _this2 = this;\n\n      spotifyApi.getMyCurrentPlaybackState().then(function (response) {\n        _this2.setState({\n          nowPlaying: {\n            name: response.item.name,\n            albumArt: response.item.album.images[0].url\n          }\n        });\n      });\n    }\n  }, {\n    key: \"getShortTerm\",\n    value: function getShortTerm() {\n      var xmlHttp = new XMLHttpRequest();\n      xmlHttp.open(\"GET\", \"https://api.spotify.com/v1/me/top/artists?time_range=short_term&limit=50\", false);\n      xmlHttp.setRequestHeader(\"Accept\", \"application/json\");\n      xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n      xmlHttp.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.auth); // true for asynchronous \n\n      xmlHttp.send(null);\n      var data = JSON.parse(xmlHttp.responseText);\n      if (xmlHttp.response > 400) alert(\"please log in\");\n      this.setState({\n        artistDetails: {\n          artists: data\n        }\n      });\n      console.log(this.state.artists);\n      xmlHttp.open(\"GET\", \"https://api.spotify.com/v1/me/top/tracks?time_range=short_term&limit=50\", false);\n      xmlHttp.setRequestHeader(\"Accept\", \"application/json\");\n      xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n      xmlHttp.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.auth); // true for asynchronous \n\n      xmlHttp.send(null);\n      if (xmlHttp.response > 400) alert(\"please log in\");\n      var data = JSON.parse(xmlHttp.responseText);\n      this.setState({\n        trackDetails: {\n          tracks: data\n        }\n      });\n    }\n  }, {\n    key: \"getMediumTerm\",\n    value: function getMediumTerm() {\n      var xmlHttp = new XMLHttpRequest();\n      xmlHttp.open(\"GET\", \"https://api.spotify.com/v1/me/top/artists?time_range=medium_term&limit=50\", false);\n      xmlHttp.setRequestHeader(\"Accept\", \"application/json\");\n      xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n      xmlHttp.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.auth); // true for asynchronous \n\n      xmlHttp.send(null);\n      var data = JSON.parse(xmlHttp.responseText);\n      if (xmlHttp.response > 400) alert(\"please log in\");\n      this.setState({\n        artistDetails: {\n          artists: data\n        }\n      });\n      xmlHttp.open(\"GET\", \"https://api.spotify.com/v1/me/top/tracks?time_range=medium_term&limit=50\", false);\n      xmlHttp.setRequestHeader(\"Accept\", \"application/json\");\n      xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n      xmlHttp.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.auth); // true for asynchronous \n\n      xmlHttp.send(null);\n      if (xmlHttp.response > 400) alert(\"please log in\");\n      var data = JSON.parse(xmlHttp.responseText);\n      this.setState({\n        trackDetails: {\n          tracks: data\n        }\n      });\n    }\n  }, {\n    key: \"getLongTerm\",\n    value: function getLongTerm() {\n      var xmlHttp = new XMLHttpRequest();\n      xmlHttp.open(\"GET\", \"https://api.spotify.com/v1/me/top/artists?time_range=long_term&limit=50\", false);\n      xmlHttp.setRequestHeader(\"Accept\", \"application/json\");\n      xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n      xmlHttp.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.auth); // true for asynchronous \n\n      xmlHttp.send(null);\n      if (xmlHttp.response > 400) alert(\"please log in\");\n      var data = JSON.parse(xmlHttp.responseText);\n      this.setState({\n        artistDetails: {\n          artists: data\n        }\n      });\n      xmlHttp.open(\"GET\", \"https://api.spotify.com/v1/me/top/tracks?time_range=long_term&limit=50\", false);\n      xmlHttp.setRequestHeader(\"Accept\", \"application/json\");\n      xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n      xmlHttp.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.auth); // true for asynchronous \n\n      xmlHttp.send(null);\n      if (xmlHttp.response > 400) alert(\"please log in\");\n      var data = JSON.parse(xmlHttp.responseText);\n      this.setState({\n        trackDetails: {\n          tracks: data\n        }\n      });\n      console.log(data);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        position: \"static\",\n        style: {\n          \"background-color\": \"#1db954\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        justify: \"space-between\" // Add it here :)\n        ,\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h2\",\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"MySpotify\"))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          \"color\": \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Now Playing: \", this.state.nowPlaying.name), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.nowPlaying.albumArt,\n        style: {\n          height: 150,\n          width: 150\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this3.getNowPlaying();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Check Now Playing\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        container: true,\n        spacing: 16,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this3.getShortTerm();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Show Short Term (4 weeks)\")), React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this3.getMediumTerm();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Show Medium Term (6 months)\")), React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this3.getLongTerm();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Show Long Term (Years)\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"root\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          \"color\": \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \" ARTISTS \"), React.createElement(GridList, {\n        className: \"gridList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, this.state.artistDetails.artists.items.map(function (artist, index) {\n        return React.createElement(GridListTile, {\n          key: artist.name,\n          style: {\n            \"height\": \"300px\",\n            \"width\": \"300px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, artist.images[0] && React.createElement(\"img\", {\n          src: artist.images[0].url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }), React.createElement(GridListTileBar, {\n          title: index + 1 + \". \" + artist.name,\n          actionIcon: React.createElement(\"a\", {\n            href: artist.uri,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 219\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: spotify,\n            style: {\n              \"height\": \"20px\",\n              \"width\": \"20px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220\n            },\n            __self: this\n          })),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }));\n      }))), React.createElement(\"div\", {\n        className: \"root\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          \"color\": \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \" TRACKS \"), React.createElement(GridList, {\n        className: \"gridList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, this.state.trackDetails.tracks.items.map(function (track, index) {\n        return React.createElement(GridListTile, {\n          key: track.name,\n          style: {\n            \"height\": \"300px\",\n            \"width\": \"300px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, track.album.images[0] && React.createElement(\"img\", {\n          href: \"google.com\",\n          src: track.album.images[0].url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }), React.createElement(GridListTileBar, {\n          title: index + 1 + \". \" + track.name,\n          subtitle: React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 237\n            },\n            __self: this\n          }, track.artists[0].name),\n          actionIcon: React.createElement(\"a\", {\n            href: track.uri,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 239\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: spotify,\n            style: {\n              \"height\": \"20px\",\n              \"width\": \"20px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 240\n            },\n            __self: this\n          })),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }));\n      }))), React.createElement(AppBar, {\n        position: \"static\",\n        style: {\n          \"background-color\": \"#1db954\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        justify: \"space-between\" // Add it here :)\n        ,\n        container: true,\n        spacing: 24,\n        style: {\n          \"justifyContent\": \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"Built by Nojan Sheybani\"), React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"All data belongs to Spotify. This website is not endorsed by Spotify.\"), React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"Contact me: nds4jp@virginia.edu\"), React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"https://twitter.com/nojan12\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: twitter,\n        style: {\n          \"width\": \"20px\",\n          \"height\": \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      })), React.createElement(\"a\", {\n        href: \"https://github.com/nickshey/Statify\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: github,\n        style: {\n          \"width\": \"20px\",\n          \"height\": \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }))), React.createElement(\"a\", {\n        href: \"https://donorbox.org/donate-if-ya-want\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"https://d1iczxrky3cnb2.cloudfront.net/button-small-blue.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/nojan/Desktop/Statify/Client/src/App.js"],"names":["React","Component","spotify","twitter","github","Button","AppBar","Toolbar","Typography","Grid","Avatar","GridList","GridListTile","GridListTileBar","SpotifyWebApi","spotifyApi","App","params","getHashParams","token","access_token","setAccessToken","state","loggedIn","nowPlaying","name","albumArt","artistDetails","artists","items","trackDetails","tracks","auth","portemail","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","href","getMyCurrentPlaybackState","then","response","setState","item","album","images","url","xmlHttp","XMLHttpRequest","open","setRequestHeader","send","data","JSON","parse","responseText","alert","console","log","height","width","getNowPlaying","getShortTerm","getMediumTerm","getLongTerm","map","artist","index","uri","track"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AAGA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,IAAMC,UAAU,GAAG,IAAID,aAAJ,EAAnB;;IAEME,G;;;;;AACJ,iBAAa;AAAA;;AAAA;;AACX;;AACA,QAAMC,MAAM,GAAG,MAAKC,aAAL,EAAf;;AACA,QAAMC,KAAK,GAAGF,MAAM,CAACG,YAArB;;AACA,QAAID,KAAJ,EAAW;AACTJ,MAAAA,UAAU,CAACM,cAAX,CAA0BF,KAA1B;AACD;;AACD,UAAKG,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAEJ,KAAK,GAAG,IAAH,GAAU,KADd;AAEXK,MAAAA,UAAU,EAAE;AAAEC,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,QAAQ,EAAE;AAAjC,OAFD;AAGXC,MAAAA,aAAa,EAAE;AAACC,QAAAA,OAAO,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR;AAAV,OAHJ;AAIXC,MAAAA,YAAY,EAAE;AAACC,QAAAA,MAAM,EAAE;AAACF,UAAAA,KAAK,EAAE;AAAR;AAAT,OAJH;AAKXG,MAAAA,IAAI,EAAEb,KALK;AAMXc,MAAAA,SAAS,EAAE;AANA,KAAb;AAPW;AAeZ;;;;oCACe;AACd,UAAIC,UAAU,GAAG,EAAjB;AACA,UAAIC,CAAJ;AAAA,UAAOC,CAAC,GAAG,sBAAX;AAAA,UACIC,CAAC,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,SAArB,CAA+B,CAA/B,CADR;AAEAN,MAAAA,CAAC,GAAGC,CAAC,CAACM,IAAF,CAAOL,CAAP,CAAJ;;AACA,aAAOF,CAAP,EAAU;AACPD,QAAAA,UAAU,CAACC,CAAC,CAAC,CAAD,CAAF,CAAV,GAAmBQ,kBAAkB,CAACR,CAAC,CAAC,CAAD,CAAF,CAArC;AACAA,QAAAA,CAAC,GAAGC,CAAC,CAACM,IAAF,CAAOL,CAAP,CAAJ;AACF;;AACD,aAAOH,UAAP;AACD;;;wCAEkB;AACjB,UAAG,CAAC,KAAKZ,KAAL,CAAWC,QAAf,EAAwB;AACtBe,QAAAA,MAAM,CAACC,QAAP,CAAgBK,IAAhB,GAAuB,kdAAvB;AACD;AACF;;;oCAEc;AAAA;;AACb7B,MAAAA,UAAU,CAAC8B,yBAAX,GACGC,IADH,CACQ,UAACC,QAAD,EAAc;AAClB,QAAA,MAAI,CAACC,QAAL,CAAc;AACZxB,UAAAA,UAAU,EAAE;AACRC,YAAAA,IAAI,EAAEsB,QAAQ,CAACE,IAAT,CAAcxB,IADZ;AAERC,YAAAA,QAAQ,EAAEqB,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBC,MAApB,CAA2B,CAA3B,EAA8BC;AAFhC;AADA,SAAd;AAOD,OATH;AAUD;;;mCAEa;AACZ,UAAIC,OAAO,GAAG,IAAIC,cAAJ,EAAd;AACAD,MAAAA,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoB,0EAApB,EAAgG,KAAhG;AACAF,MAAAA,OAAO,CAACG,gBAAR,CAAyB,QAAzB,EAAmC,kBAAnC;AACAH,MAAAA,OAAO,CAACG,gBAAR,CAAyB,cAAzB,EAAyC,kBAAzC;AACAH,MAAAA,OAAO,CAACG,gBAAR,CAAyB,eAAzB,EAA0C,YAAY,KAAKlC,KAAL,CAAWU,IAAjE,EALY,CAK4D;;AACxEqB,MAAAA,OAAO,CAACI,IAAR,CAAa,IAAb;AACA,UAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWP,OAAO,CAACQ,YAAnB,CAAX;AACA,UAAGR,OAAO,CAACN,QAAR,GAAmB,GAAtB,EACEe,KAAK,CAAC,eAAD,CAAL;AACF,WAAKd,QAAL,CAAc;AACZrB,QAAAA,aAAa,EAAE;AAACC,UAAAA,OAAO,EAAE8B;AAAV;AADH,OAAd;AAGAK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK1C,KAAL,CAAWM,OAAvB;AACAyB,MAAAA,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoB,yEAApB,EAA+F,KAA/F;AACAF,MAAAA,OAAO,CAACG,gBAAR,CAAyB,QAAzB,EAAmC,kBAAnC;AACAH,MAAAA,OAAO,CAACG,gBAAR,CAAyB,cAAzB,EAAyC,kBAAzC;AACAH,MAAAA,OAAO,CAACG,gBAAR,CAAyB,eAAzB,EAA0C,YAAY,KAAKlC,KAAL,CAAWU,IAAjE,EAjBY,CAiB4D;;AACxEqB,MAAAA,OAAO,CAACI,IAAR,CAAa,IAAb;AACA,UAAGJ,OAAO,CAACN,QAAR,GAAmB,GAAtB,EACEe,KAAK,CAAC,eAAD,CAAL;AACF,UAAIJ,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWP,OAAO,CAACQ,YAAnB,CAAX;AACA,WAAKb,QAAL,CAAc;AACZlB,QAAAA,YAAY,EAAE;AAACC,UAAAA,MAAM,EAAE2B;AAAT;AADF,OAAd;AAGD;;;oCACc;AACb,UAAIL,OAAO,GAAG,IAAIC,cAAJ,EAAd;AACAD,MAAAA,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoB,2EAApB,EAAiG,KAAjG;AACAF,MAAAA,OAAO,CAACG,gBAAR,CAAyB,QAAzB,EAAmC,kBAAnC;AACAH,MAAAA,OAAO,CAACG,gBAAR,CAAyB,cAAzB,EAAyC,kBAAzC;AACAH,MAAAA,OAAO,CAACG,gBAAR,CAAyB,eAAzB,EAA0C,YAAY,KAAKlC,KAAL,CAAWU,IAAjE,EALa,CAK2D;;AACxEqB,MAAAA,OAAO,CAACI,IAAR,CAAa,IAAb;AACA,UAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWP,OAAO,CAACQ,YAAnB,CAAX;AACA,UAAGR,OAAO,CAACN,QAAR,GAAmB,GAAtB,EACEe,KAAK,CAAC,eAAD,CAAL;AACF,WAAKd,QAAL,CAAc;AACZrB,QAAAA,aAAa,EAAE;AAACC,UAAAA,OAAO,EAAE8B;AAAV;AADH,OAAd;AAGAL,MAAAA,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoB,0EAApB,EAAgG,KAAhG;AACAF,MAAAA,OAAO,CAACG,gBAAR,CAAyB,QAAzB,EAAmC,kBAAnC;AACAH,MAAAA,OAAO,CAACG,gBAAR,CAAyB,cAAzB,EAAyC,kBAAzC;AACAH,MAAAA,OAAO,CAACG,gBAAR,CAAyB,eAAzB,EAA0C,YAAY,KAAKlC,KAAL,CAAWU,IAAjE,EAhBa,CAgB2D;;AACxEqB,MAAAA,OAAO,CAACI,IAAR,CAAa,IAAb;AACA,UAAGJ,OAAO,CAACN,QAAR,GAAmB,GAAtB,EACEe,KAAK,CAAC,eAAD,CAAL;AACF,UAAIJ,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWP,OAAO,CAACQ,YAAnB,CAAX;AACA,WAAKb,QAAL,CAAc;AACZlB,QAAAA,YAAY,EAAE;AAACC,UAAAA,MAAM,EAAE2B;AAAT;AADF,OAAd;AAGD;;;kCACY;AACX,UAAIL,OAAO,GAAG,IAAIC,cAAJ,EAAd;AACAD,MAAAA,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoB,yEAApB,EAA+F,KAA/F;AACAF,MAAAA,OAAO,CAACG,gBAAR,CAAyB,QAAzB,EAAmC,kBAAnC;AACAH,MAAAA,OAAO,CAACG,gBAAR,CAAyB,cAAzB,EAAyC,kBAAzC;AACAH,MAAAA,OAAO,CAACG,gBAAR,CAAyB,eAAzB,EAA0C,YAAY,KAAKlC,KAAL,CAAWU,IAAjE,EALW,CAK6D;;AACxEqB,MAAAA,OAAO,CAACI,IAAR,CAAa,IAAb;AACA,UAAGJ,OAAO,CAACN,QAAR,GAAmB,GAAtB,EACEe,KAAK,CAAC,eAAD,CAAL;AACF,UAAIJ,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWP,OAAO,CAACQ,YAAnB,CAAX;AACA,WAAKb,QAAL,CAAc;AACZrB,QAAAA,aAAa,EAAE;AAACC,UAAAA,OAAO,EAAE8B;AAAV;AADH,OAAd;AAGAL,MAAAA,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoB,wEAApB,EAA8F,KAA9F;AACAF,MAAAA,OAAO,CAACG,gBAAR,CAAyB,QAAzB,EAAmC,kBAAnC;AACAH,MAAAA,OAAO,CAACG,gBAAR,CAAyB,cAAzB,EAAyC,kBAAzC;AACAH,MAAAA,OAAO,CAACG,gBAAR,CAAyB,eAAzB,EAA0C,YAAY,KAAKlC,KAAL,CAAWU,IAAjE,EAhBW,CAgB6D;;AACxEqB,MAAAA,OAAO,CAACI,IAAR,CAAa,IAAb;AACA,UAAGJ,OAAO,CAACN,QAAR,GAAmB,GAAtB,EACEe,KAAK,CAAC,eAAD,CAAL;AACF,UAAIJ,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWP,OAAO,CAACQ,YAAnB,CAAX;AACA,WAAKb,QAAL,CAAc;AACZlB,QAAAA,YAAY,EAAE;AAACC,UAAAA,MAAM,EAAE2B;AAAT;AADF,OAAd;AAGAK,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACD;;;6BAIQ;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAC,QAAjB;AAA0B,QAAA,KAAK,EAAE;AAAC,8BAAoB;AAArB,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,OAAO,EAAC,eADV,CAC0B;AAD1B;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,OAAO,EAAE,EAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,KAAK,EAAC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CALF,CADF,CADF,CADF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBF,EAoBE;AAAK,QAAA,KAAK,EAAE;AAAC,mBAAQ;AAAT,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACiB,KAAKpC,KAAL,CAAWE,UAAX,CAAsBC,IADvC,CApBF,EAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAE,KAAKH,KAAL,CAAWE,UAAX,CAAsBE,QAAhC;AAA0C,QAAA,KAAK,EAAE;AAAEuC,UAAAA,MAAM,EAAE,GAAV;AAAeC,UAAAA,KAAK,EAAE;AAAtB,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAvBF,EA0BI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,aAAL,EAAN;AAAA,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BA1BJ,EA6BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7BF,EA8BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9BF,EA+BE,oBAAC,IAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,OAAO,EAAE,EAFX;AAGE,QAAA,OAAO,EAAC,QAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,YAAL,EAAN;AAAA,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,CALF,EAWE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,aAAL,EAAN;AAAA,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,CAXF,EAiBE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,WAAL,EAAN;AAAA,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,CAjBF,CA/BF,EAuDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvDF,EA0DI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAE;AAAC,mBAAQ;AAAT,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKhD,KAAL,CAAWK,aAAX,CAAyBC,OAAzB,CAAiCC,KAAjC,CAAuC0C,GAAvC,CAA2C,UAACC,MAAD,EAASC,KAAT;AAAA,eAC1C,oBAAC,YAAD;AAAc,UAAA,GAAG,EAAED,MAAM,CAAC/C,IAA1B;AAAgC,UAAA,KAAK,EAAG;AAAC,sBAAS,OAAV;AAAmB,qBAAQ;AAA3B,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI+C,MAAM,CAACrB,MAAP,CAAc,CAAd,KACF;AAAK,UAAA,GAAG,EAAEqB,MAAM,CAACrB,MAAP,CAAc,CAAd,EAAiBC,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE,oBAAC,eAAD;AACE,UAAA,KAAK,EAAGqB,KAAK,GAAC,CAAP,GAAY,IAAZ,GAAmBD,MAAM,CAAC/C,IADnC;AAEE,UAAA,UAAU,EACR;AAAG,YAAA,IAAI,EAAE+C,MAAM,CAACE,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,GAAG,EAAExE,OAAV;AAAmB,YAAA,KAAK,EAAG;AAAC,wBAAS,MAAV;AAAkB,uBAAQ;AAA1B,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,CAD0C;AAAA,OAA3C,CADH,CAFF,CA1DJ,EA6EI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAE;AAAC,mBAAQ;AAAT,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKoB,KAAL,CAAWQ,YAAX,CAAwBC,MAAxB,CAA+BF,KAA/B,CAAqC0C,GAArC,CAAyC,UAACI,KAAD,EAAQF,KAAR;AAAA,eACxC,oBAAC,YAAD;AAAc,UAAA,GAAG,EAAEE,KAAK,CAAClD,IAAzB;AAA+B,UAAA,KAAK,EAAG;AAAC,sBAAS,OAAV;AAAmB,qBAAQ;AAA3B,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACIkD,KAAK,CAACzB,KAAN,CAAYC,MAAZ,CAAmB,CAAnB,KACF;AAAK,UAAA,IAAI,EAAC,YAAV;AAAuB,UAAA,GAAG,EAAEwB,KAAK,CAACzB,KAAN,CAAYC,MAAZ,CAAmB,CAAnB,EAAsBC,GAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE,oBAAC,eAAD;AACE,UAAA,KAAK,EAAGqB,KAAK,GAAC,CAAP,GAAY,IAAZ,GAAmBE,KAAK,CAAClD,IADlC;AAEE,UAAA,QAAQ,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOkD,KAAK,CAAC/C,OAAN,CAAc,CAAd,EAAiBH,IAAxB,CAFZ;AAGE,UAAA,UAAU,EACR;AAAG,YAAA,IAAI,EAAEkD,KAAK,CAACD,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,GAAG,EAAExE,OAAV;AAAmB,YAAA,KAAK,EAAG;AAAC,wBAAS,MAAV;AAAkB,uBAAQ;AAA1B,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,CADwC;AAAA,OAAzC,CADH,CAFF,CA7EJ,EAiGI,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAC,QAAjB;AAA0B,QAAA,KAAK,EAAE;AAAC,8BAAoB;AAArB,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,OAAO,EAAC,eADV,CAC0B;AAD1B;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,OAAO,EAAE,EAHX;AAIE,QAAA,KAAK,EAAE;AAAC,4BAAkB;AAAnB,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADA,EAIE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFAJF,EAOE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAPF,EAUE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,IAAI,EAAC,6BAAR;AAAsC,QAAA,MAAM,EAAC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAEC,OAAV;AAAmB,QAAA,KAAK,EAAE;AAAC,mBAAQ,MAAT;AAAiB,oBAAS;AAA1B,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAG,QAAA,IAAI,EAAC,qCAAR;AAA8C,QAAA,MAAM,EAAC,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAEC,MAAV;AAAkB,QAAA,KAAK,EAAE;AAAC,mBAAQ,MAAT;AAAiB,oBAAS;AAA1B,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,CAVF,EAkBE;AAAG,QAAA,IAAI,EAAC,wCAAR;AAAiD,QAAA,MAAM,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAC,6DAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAlBF,CANF,CADF,CADA,CAjGJ,CADF;AAuKD;;;;EAxSeH,S;;AA2SlB,eAAee,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport login from './login.svg';\nimport spotify from './spotify.png';\nimport twitter from './twitter.png';\nimport github from './github.png';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport Avatar from '@material-ui/core/Avatar'\nimport GridList from '@material-ui/core/GridList'\nimport GridListTile from '@material-ui/core/GridListTile'\nimport GridListTileBar from '@material-ui/core/GridListTileBar'\n\n\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\nclass App extends Component {\n  constructor(){\n    super();\n    const params = this.getHashParams();\n    const token = params.access_token;\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n    this.state = {\n      loggedIn: token ? true : false,\n      nowPlaying: { name: 'Not Checked', albumArt: 'http://www.scottishculture.org/themes/scottishculture/images/music_placeholder.png?' },\n      artistDetails: {artists: {items: []}},\n      trackDetails: {tracks: {items: []}},\n      auth: token,\n      portemail: 'http://localhost:81'\n    }\n  }\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q)\n    while (e) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n       e = r.exec(q);\n    }\n    return hashParams;\n  }\n\n  componentDidMount(){\n    if(!this.state.loggedIn){\n      window.location.href = 'https://accounts.spotify.com/authorize?client_id=22e020a622e44cdcbfa58f0cdbb04fe9&scope=playlist-read-private%20playlist-read-collaborative%20playlist-modify-public%20user-read-recently-played%20playlist-modify-private%20ugc-image-upload%20user-follow-modify%20user-follow-read%20user-library-read%20user-library-modify%20user-read-private%20user-read-email%20user-top-read%20user-read-playback-state&response_type=token&redirect_uri=http://localhost:3000/callback'; \n    }\n  }\n\n  getNowPlaying(){\n    spotifyApi.getMyCurrentPlaybackState()\n      .then((response) => {\n        this.setState({\n          nowPlaying: { \n              name: response.item.name, \n              albumArt: response.item.album.images[0].url\n            }\n        });\n        \n      })\n  }\n\n  getShortTerm(){\n    var xmlHttp = new XMLHttpRequest();\n    xmlHttp.open(\"GET\", \"https://api.spotify.com/v1/me/top/artists?time_range=short_term&limit=50\", false);\n    xmlHttp.setRequestHeader(\"Accept\", \"application/json\");\n    xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n    xmlHttp.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.auth); // true for asynchronous \n    xmlHttp.send(null);\n    var data = JSON.parse(xmlHttp.responseText);\n    if(xmlHttp.response > 400)\n      alert(\"please log in\")\n    this.setState({\n      artistDetails: {artists: data}\n    })\n    console.log(this.state.artists);\n    xmlHttp.open(\"GET\", \"https://api.spotify.com/v1/me/top/tracks?time_range=short_term&limit=50\", false);\n    xmlHttp.setRequestHeader(\"Accept\", \"application/json\");\n    xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n    xmlHttp.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.auth); // true for asynchronous \n    xmlHttp.send(null);\n    if(xmlHttp.response > 400)\n      alert(\"please log in\")\n    var data = JSON.parse(xmlHttp.responseText);\n    this.setState({\n      trackDetails: {tracks: data}\n    })\n  }\n  getMediumTerm(){\n    var xmlHttp = new XMLHttpRequest();\n    xmlHttp.open(\"GET\", \"https://api.spotify.com/v1/me/top/artists?time_range=medium_term&limit=50\", false);\n    xmlHttp.setRequestHeader(\"Accept\", \"application/json\");\n    xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n    xmlHttp.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.auth); // true for asynchronous \n    xmlHttp.send(null);\n    var data = JSON.parse(xmlHttp.responseText);\n    if(xmlHttp.response > 400)\n      alert(\"please log in\")\n    this.setState({\n      artistDetails: {artists: data}\n    })\n    xmlHttp.open(\"GET\", \"https://api.spotify.com/v1/me/top/tracks?time_range=medium_term&limit=50\", false);\n    xmlHttp.setRequestHeader(\"Accept\", \"application/json\");\n    xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n    xmlHttp.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.auth); // true for asynchronous \n    xmlHttp.send(null);\n    if(xmlHttp.response > 400)\n      alert(\"please log in\")\n    var data = JSON.parse(xmlHttp.responseText);\n    this.setState({\n      trackDetails: {tracks: data}\n    })\n  }\n  getLongTerm(){\n    var xmlHttp = new XMLHttpRequest();\n    xmlHttp.open(\"GET\", \"https://api.spotify.com/v1/me/top/artists?time_range=long_term&limit=50\", false);\n    xmlHttp.setRequestHeader(\"Accept\", \"application/json\");\n    xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n    xmlHttp.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.auth); // true for asynchronous \n    xmlHttp.send(null);\n    if(xmlHttp.response > 400)\n      alert(\"please log in\")\n    var data = JSON.parse(xmlHttp.responseText);\n    this.setState({\n      artistDetails: {artists: data}\n    })\n    xmlHttp.open(\"GET\", \"https://api.spotify.com/v1/me/top/tracks?time_range=long_term&limit=50\", false);\n    xmlHttp.setRequestHeader(\"Accept\", \"application/json\");\n    xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n    xmlHttp.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.auth); // true for asynchronous \n    xmlHttp.send(null);\n    if(xmlHttp.response > 400)\n      alert(\"please log in\")\n    var data = JSON.parse(xmlHttp.responseText);\n    this.setState({\n      trackDetails: {tracks: data}\n    })\n    console.log(data)\n  }\n\n  \n\n  render() {\n    return (\n      <div className=\"App\">\n        <AppBar position=\"static\" style={{\"background-color\": \"#1db954\"}}>\n          <Toolbar>\n            <Grid\n              justify=\"space-between\" // Add it here :)\n              container \n              spacing={24}\n            >\n              <Grid item>\n                <Typography variant=\"h2\" color=\"inherit\">\n                  MySpotify\n                </Typography>\n              </Grid>\n              {/*<Grid item>\n                <Avatar src={user} />\n              </Grid>*/}\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        <br />\n        <div style={{\"color\":\"white\"}}>\n          Now Playing: { this.state.nowPlaying.name }\n        </div>\n        <div>\n          <img src={this.state.nowPlaying.albumArt} style={{ height: 150, width: 150 }}/>\n        </div>\n          <Button variant=\"contained\" color=\"primary\" onClick={() => this.getNowPlaying()}>\n            Check Now Playing\n          </Button>\n        <br />\n        <br />\n        <Grid               \n          container \n          spacing={16}\n          justify=\"center\"\n        >\n          <Grid item>\n            <Button variant=\"contained\" color=\"primary\" onClick={() => this.getShortTerm()}>\n                Show Short Term\n                (4 weeks)\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button variant=\"contained\" color=\"primary\" onClick={() => this.getMediumTerm()}>\n                Show Medium Term\n                (6 months)\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button variant=\"contained\" color=\"primary\" onClick={() => this.getLongTerm()}>\n                Show Long Term\n                (Years)\n            </Button>\n          </Grid>\n        </Grid>\n        <br />\n\n        {/*RENDER ARTISTS AND TRACKS DATA*/}\n          <div className=\"root\">\n            <h1 style={{\"color\":\"white\"}}> ARTISTS </h1>\n            <GridList className=\"gridList\">\n              {this.state.artistDetails.artists.items.map((artist, index) => (\n                <GridListTile key={artist.name} style ={{\"height\":\"300px\", \"width\":\"300px\"}}>\n                  { artist.images[0] && \n                  <img src={artist.images[0].url}/>}\n                  <GridListTileBar\n                    title={(index+1) + \". \" + artist.name}\n                    actionIcon={\n                      <a href={artist.uri}>\n                        <img src={spotify} style ={{\"height\":\"20px\", \"width\":\"20px\"}}/>\n                      </a>\n                    }\n                  />\n                </GridListTile>\n              ))}\n            </GridList>\n          </div>\n          <div className=\"root\">\n            <h1 style={{\"color\":\"white\"}}> TRACKS </h1>\n            <GridList className=\"gridList\">\n              {this.state.trackDetails.tracks.items.map((track, index) => (\n                <GridListTile key={track.name} style ={{\"height\":\"300px\", \"width\":\"300px\"}}>\n                  { track.album.images[0] && \n                  <img href=\"google.com\" src={track.album.images[0].url}/>}\n                  <GridListTileBar\n                    title={(index+1) + \". \" + track.name}\n                    subtitle={<span>{track.artists[0].name}</span>}\n                    actionIcon={\n                      <a href={track.uri}>\n                        <img src={spotify} style ={{\"height\":\"20px\", \"width\":\"20px\"}}/>\n                      </a>\n                    }\n                  />\n                </GridListTile>\n              ))}\n            </GridList>\n          </div>\n          <AppBar position=\"static\" style={{\"background-color\": \"#1db954\"}}>\n          <Toolbar>\n            <Grid\n              justify=\"space-between\" // Add it here :)\n              container \n              spacing={24}\n              style={{\"justifyContent\": \"center\"}}\n            >\n              <Grid item>\n              <Typography variant=\"body2\" color=\"inherit\">\n                  Built by Nojan Sheybani\n                </Typography>\n                <Typography variant=\"body2\" color=\"inherit\">\n                  All data belongs to Spotify. This website is not endorsed by Spotify.\n                </Typography>\n                <Typography variant=\"body2\" color=\"inherit\">\n                  Contact me: nds4jp@virginia.edu\n                </Typography>\n                <Typography>\n                  <a href=\"https://twitter.com/nojan12\" target=\"_blank\"> \n                    <img src={twitter} style={{\"width\":\"20px\", \"height\":\"20px\"}}/>\n                  </a>\n                  <a href=\"https://github.com/nickshey/Statify\" target=\"_blank\"> \n                    <img src={github} style={{\"width\":\"20px\", \"height\":\"20px\"}}/>\n                  </a>\n                </Typography>\n                <a href=\"https://donorbox.org/donate-if-ya-want\" target=\"_blank\">\n                  <img src=\"https://d1iczxrky3cnb2.cloudfront.net/button-small-blue.png\" />\n                </a>\n              </Grid>\n              {/*<Grid item>\n                <Avatar src={user} />\n              </Grid>*/}\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        {/*\n        <div class=\"left-half\">\n        <h1> Artists </h1>\n        {this.state.artistDetails.artists.items.map(artist => (\n          <div>\n              { artist.images[0] &&\n              <div>\n              <img src={artist.images[0].url} style={{ height: 150, width: 150 }}/> <br />\n              </div>\n              }\n              <a href={artist.uri}> {artist.name} </a>\n              <br />\n              <br />\n          </div>\n        ))}\n        </div>\n        <div class=\"right-half\">\n        <h1> Tracks </h1>\n        {this.state.trackDetails.tracks.items.map(track => (\n          <div>\n              { track.album.images[0] &&\n              <div>\n              <img src={track.album.images[0].url} style={{ height: 150, width: 150 }}/> <br />\n              </div>\n              }\n              <a href={track.uri}> {track.name} </a>\n              <p> {track.artists[0].name} </p>\n          </div>\n        ))}\n        </div>\n            */}\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}